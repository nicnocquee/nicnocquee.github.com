<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ios | Something Awesome]]></title>
  <link href="http://www.nicnocquee.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://www.nicnocquee.com/"/>
  <updated>2014-09-30T10:36:34+09:00</updated>
  <id>http://www.nicnocquee.com/</id>
  <author>
    <name><![CDATA[Nico Prananta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NSAttributedString With NSStrikethroughStyleAttributeName Bug in iOS 8]]></title>
    <link href="http://www.nicnocquee.com/blog/2014/09/22/nsattributedstring-with-nsstrikethroughstyleattributename-bug-in-ios-8/"/>
    <updated>2014-09-22T20:09:42+09:00</updated>
    <id>http://www.nicnocquee.com/blog/2014/09/22/nsattributedstring-with-nsstrikethroughstyleattributename-bug-in-ios-8</id>
    <content type="html"><![CDATA[<p>In iOS 7, it&#8217;s easy to create UILabel with strikethrough text. You can just simply assign <code>NSAttributedString</code> to the text label.</p>

<!--more-->


<pre><code class="objc">    NSString *price = @"7,500";
    NSString *retailPrice = @"10,000ÂÜÜ";
    NSString *text = [NSString stringWithFormat:@"%@ %@", price, retailPrice];
    NSMutableAttributedString *string = [[NSMutableAttributedString alloc] initWithString:text];
    [string addAttributes:@{NSStrikethroughStyleAttributeName:@(NSUnderlineStyleSingle)} range:[text rangeOfString:retailPrice]];
    [self.label setAttributedText:string];
</code></pre>

<p><img src="http://f.cl.ly/items/1s1g3A3Z070n0u1k2t2W/iOS%20Simulator%20Screen%20Shot%20Sep%2022,%202014,%2020.11.27.png" alt="nsattributedstring-ios-8-bug" /></p>

<p>But in iOS 8, that code didn&#8217;t work anymore. The strikethrough line didn&#8217;t appear. Funny thing was, if range&#8217;s location is set to 0, or strikethrough from the beginning, the line appeared. To fix this you just have to assign the strikethrough attribute, <code>NSUnderlineStyleNone</code> to the whole string on initialization.</p>

<pre><code class="objc">    NSMutableAttributedString *string = [[NSMutableAttributedString alloc] initWithString:text attributes:@{NSStrikethroughStyleAttributeName: @(NSUnderlineStyleNone)}];
    [string addAttributes:@{NSStrikethroughStyleAttributeName:@(NSUnderlineStyleSingle)} range:[text rangeOfString:retailPrice]];
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift: There's a Shorter Way for That]]></title>
    <link href="http://www.nicnocquee.com/blog/2014/09/22/swift-theres-a-shorter-way-for-that/"/>
    <updated>2014-09-22T09:40:52+09:00</updated>
    <id>http://www.nicnocquee.com/blog/2014/09/22/swift-theres-a-shorter-way-for-that</id>
    <content type="html"><![CDATA[<p>Backward sorting array of string using Swift:</p>

<!--more-->


<pre><code class="objc">    let names = ["Chris", "Alex", "Ewa", "Barry", "Daniella"]
    func backwards(s1: String, s2: String) -&gt; Bool {
        return s1 &gt; s2
    }
    var reversed = sorted(names, backwards)
</code></pre>

<p>Too long.</p>

<pre><code class="objc">    reversed = sorted(names, { (s1: String, s2: String) -&gt; Bool in
            return s1 &gt; s2
    })
</code></pre>

<p>Let&#8217;s make it one line.</p>

<pre><code class="objc">    reversed = sorted(names, { (s1: String, s2: String) -&gt; Bool in return s1 &gt; s2 } )
</code></pre>

<p>Don&#8217;t be satisfied yet.</p>

<pre><code class="objc">    reversed = sorted(names, { s1, s2 in return s1 &gt; s2 } )
</code></pre>

<p>You didn&#8217;t think that&#8217;s the best we can do, right?</p>

<pre><code class="objc">    reversed = sorted(names, { s1, s2 in s1 &gt; s2 } )
</code></pre>

<p>Shorter!</p>

<pre><code class="objc">    reversed = sorted(names, { $0 &gt; $1 } )  
</code></pre>

<p>You can do it!</p>

<pre><code class="objc">    reversed = sorted(names, &gt;)
</code></pre>

<p>Use the force!</p>

<pre><code class="objc">    üòÑ=sorted(üê∑,&gt;)
</code></pre>

<p>There! We have the winner! Oh, if you see two rectangles on the code above, use Safari or  Firefox, please :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App: My Story]]></title>
    <link href="http://www.nicnocquee.com/blog/2014/07/22/app-my-story/"/>
    <updated>2014-07-22T18:54:00+09:00</updated>
    <id>http://www.nicnocquee.com/blog/2014/07/22/app-my-story</id>
    <content type="html"><![CDATA[<p><img src="https://pbs.twimg.com/media/BtGz0bLIMAA0UEk.jpg" alt="Comic I made when I was in master course" /></p>

<p>My first app was a bingo game. Prior to that, I had only learned Java in college. Before learning Java, I always thought that software was the result of magic. When I entered master course in Japan, I was coding sloppily in C for research. Mostly playing with <a href="http://www.gnu.org/software/gsl/">GNU Scientific Library</a>. I didn&#8217;t have a Mac nor iPhone. I even teased my friend who used OSX on his laptop back in college.</p>

<!--more-->


<p><img src="http://i1.kym-cdn.com/photos/images/newsfeed/000/234/765/b7e.jpg" alt="" /></p>

<p>A year passed by since I took master course and I still had no idea what I was doing. Then I stumbled upon an article by <a href="http://www.dannychoo.com">Danny Choo</a> about his passion and how he started his career. I can&#8217;t recall which article it was but probably this article about <a href="http://www.dannychoo.com/en/post/1691/Pursue+Your+Passion+A+Summary.html">pursuing passion</a> or this article about <a href="http://www.dannychoo.com/en/post/26094/How+Discovering+Japan+Changed+My+Life.html">how discovering Japan changed his life</a>. Reading about his life got me thinking that I needed to find something I&#8217;m passionate about. After digging through more articles on his website, I saw his iMac. I was amazed by how beautiful it was. I ended up buying one for myself. My very first Apple product.</p>

<p>One day in the class room, I saw my Japanese friend was playing with his shiny black phone. I was interested so I asked if I could take a look. There was only one button. And it has this slide to unlock mechanism. Mind. Blown. It was iPhone 3GS. My very first iPhone.</p>

<p>Having free time and lack of interest in what I was doing at that time, I decided to get the Apple Developer Program. Learning Objective-C, submitting my first app, and receiving my first payment from the App Store admittedly changed my life. I decided to quit my PhD and took a job in a startup in Japan as an iOS developer.</p>

<p class="wide-image">
<img src="https://nicnocquee.trovebox.com/photo/p40/create/1975d/870x870.jpg" alt="My Apple products family">
</p>


<p>I&#8217;m writing this to support <a href="http://appdocumentary.com">App: The Human Story</a>. I didn&#8217;t plan to write anything since I figured my story is not that exciting. I haven&#8217;t made any hit game or app like Flappy Bird. But I&#8217;m making a living doing what I&#8217;m passionate about and I want to share it with others. I&#8217;m also pretty proud of the app I&#8217;m making for the company, <a href="https://itunes.apple.com/jp/app/monoco-monoko-akusesarinoserekutoshoppu/id539376693?mt=8">Monoco (Japan App Store only)</a>, and my own latest app, <a href="http://www.getdelightfulapp.com">Delightful</a>.</p>

<p>If you&#8217;re an app developer, help them to reach their goal in <a href="https://www.kickstarter.com/projects/appdocu/app-the-human-story">kickstarter</a> and spread the word. It seems like it&#8217;s gonna be an interesting documentary.</p>

<p>Update: Also posted in <a href="https://medium.com/@nicnocquee/app-my-story-98803b1299a4">Medium</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Script to Download Wwdc 2014 Videos]]></title>
    <link href="http://www.nicnocquee.com/blog/2014/06/26/script-to-download-wwdc-2014-videos/"/>
    <updated>2014-06-26T23:38:00+09:00</updated>
    <id>http://www.nicnocquee.com/blog/2014/06/26/script-to-download-wwdc-2014-videos</id>
    <content type="html"><![CDATA[<p><img src="http://f.cl.ly/items/2m2M471z1O072F1F0B2u/Screen%20Shot%202014-06-26%20at%2023.54.57.png" alt="Script to download wwdc 14 videos" /></p>

<p>Although I&#8217;ll be most likely sleeping, I&#8217;m planning to catch up with WWDC 14 videos and watch some on the plane this weekend. I can easily download the videos via WWDC app. However they&#8217;ll eat up my iPhone&#8217;s free space. And I also want to speed up the videos a little bit. But downloading the videos one by one from the <a href="https://developer.apple.com/videos/wwdc/2014/">download page</a> is too barbaric.</p>

<!-- more -->


<p>There must be a script to download them all in one click. Google top search result returns this <a href="https://github.com/ohoachuck/wwdc-downloader">wwdc-downloader</a>, this <a href="http://samwize.com/2014/06/06/download-all-wwdc-2014-pdf-slides-only/">script to download PDF only or the HD videos</a>, and <a href="http://andrewcook.org/2014/06/07/download-wwdc-2014-videos/">this script to download the SD videos</a>. But for some reasons they didn&#8217;t work.</p>

<p>With a slight modification to those last two scripts, I managed to download the SD videos.</p>

<pre><code class="bash">    curl https://developer.apple.com/videos/wwdc/2014/ | grep -iIoh '|.*http.*._sd_.*dl=1' | sed -e 's/|.*"//g' | sed -e 's/\?dl=1//g'|xargs -n1 curl --remote-name
</code></pre>

<p>Then to speed up the videos by 1.3x, I used ffmpeg.</p>

<pre><code class="bash">    find . -name '*.mov' -exec ffmpeg -i {} -filter_complex "[0:v]setpts=10/13*PTS[v];[0:a]atempo=1.3[a]" -map "[v]" -map "[a]" {}@2x.mov \;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Any Fonts and Use It in Any Apps in iOS 7]]></title>
    <link href="http://www.nicnocquee.com/blog/2014/04/02/install-any-fonts-and-use-it-in-any-apps-in-ios-7/"/>
    <updated>2014-04-02T16:43:00+09:00</updated>
    <id>http://www.nicnocquee.com/blog/2014/04/02/install-any-fonts-and-use-it-in-any-apps-in-ios-7</id>
    <content type="html"><![CDATA[<p>I just found out about this and turns out it&#8217;s pretty easy to do.</p>

<!-- more -->


<ol>
<li><p>Create a XML file and copy the following</p>

<pre><code> &lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;
 &lt;plist version="1.0"&gt;
 &lt;dict&gt;
     &lt;key&gt;PayloadContent&lt;/key&gt;
     &lt;array&gt;
         &lt;dict&gt;
             &lt;key&gt;Font&lt;/key&gt;
             &lt;data&gt;
                 Base 64 String
             &lt;/data&gt;
             &lt;key&gt;PayloadIdentifier&lt;/key&gt;
             &lt;string&gt;font identifider&lt;/string&gt;
             &lt;key&gt;PayloadType&lt;/key&gt;
             &lt;string&gt;com.apple.font&lt;/string&gt;
             &lt;key&gt;PayloadUUID&lt;/key&gt;
             &lt;string&gt;B0DF5525-7120-406F-AC71-5A5BA59ECD82&lt;/string&gt;
             &lt;key&gt;PayloadVersion&lt;/key&gt;
             &lt;integer&gt;1&lt;/integer&gt;
         &lt;/dict&gt;
     &lt;/array&gt;
     &lt;key&gt;PayloadDisplayName&lt;/key&gt;
     &lt;string&gt;Payload display name&lt;/string&gt;
     &lt;key&gt;PayloadIdentifier&lt;/key&gt;
     &lt;string&gt;Pay load Identifier&lt;/string&gt;
     &lt;key&gt;PayloadOrganization&lt;/key&gt;
     &lt;string&gt;Font Profile&lt;/string&gt;
     &lt;key&gt;PayloadType&lt;/key&gt;
     &lt;string&gt;Configuration&lt;/string&gt;
     &lt;key&gt;PayloadUUID&lt;/key&gt;
     &lt;string&gt;0A35FE6A-C980-442B-9BD3-F44C67CA0D19&lt;/string&gt;
     &lt;key&gt;PayloadVersion&lt;/key&gt;
     &lt;integer&gt;1&lt;/integer&gt;
 &lt;/dict&gt;
 &lt;/plist&gt;
</code></pre></li>
<li><p>Convert the font you want to install to base64 by executing the following command in terminal</p>

<pre><code> openssl base64 -in font_name -out output_file_name
</code></pre></li>
<li><p>Copy the base64 string to clipboard</p>

<pre><code> cat output_file_name | pbcopy
</code></pre>

<p> and paste it into the XML file between the <code>&lt;data&gt;  &lt;/data&gt;</code> tags.</p></li>
<li><p>Open the XML from your iOS 7 device by sending it via email or uploading it to Dropbox or something.</p></li>
<li><p>Install the profile.</p>

<p> <img src="http://f.cl.ly/items/0F021r1Y2G0A333p2t3U/April_02__2014_at_0451PM.png" alt="" /></p></li>
</ol>


<p>Now you can use the font in any apps that allow font selection, like Keynote for example.</p>

<p><img src="http://f.cl.ly/items/1U1e0N1W111d3W1T0x1X/April_02__2014_at_0437PM.png" alt="" /></p>

<p>Enjoy! „ÉΩ(ÔΩ°„Çùœâ„ÉªÔΩ°)Ôæâ</p>
]]></content>
  </entry>
  
</feed>
