<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ios | Something Awesome]]></title>
  <link href="http://www.nicnocquee.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://www.nicnocquee.com/"/>
  <updated>2015-01-29T13:13:29+09:00</updated>
  <id>http://www.nicnocquee.com/</id>
  <author>
    <name><![CDATA[Nico Prananta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Drive UICollectionView Interactive Layout Transition Using Facebook's Pop]]></title>
    <link href="http://www.nicnocquee.com/blog/2015/01/29/drive-uicollectionview-interactive-layout-transition-using-facebooks-pop/"/>
    <updated>2015-01-29T11:30:53+09:00</updated>
    <id>http://www.nicnocquee.com/blog/2015/01/29/drive-uicollectionview-interactive-layout-transition-using-facebooks-pop</id>
    <content type="html"><![CDATA[<p>UICollectionView has a method to change layout easily: <code>setCollectionViewLayout:animated:completion:</code>. And according to documentation, if you implement the delegate&#8217;s <code>collectionView:transitionLayoutForOldLayout:newLayout:</code> you can customize the behaviour or the cells and decoration views during transition.</p>

<!-- more -->


<blockquote><p>Implement this method if you want to return a custom UICollectionViewTransitionLayout object for use during the transition. A transition layout object lets you customize the behavior of cells and decoration views when transitioning from one layout to the next. Normally, transitioning between layouts causes items to animate directly from their current locations to their new locations. With a transition layout object, you can have objects follow a non linear path, use a different timing algorithm, or move according to incoming touch events.</p>

<p>If your delegate does not implement this method, the collection view creates a standard UICollectionViewTransitionLayout object and uses that object to manage the transition.</p></blockquote>

<p>But strangely, that delegate&#8217;s method is not called when we change layout using <code>setCollectionViewLayout</code>. Somebody in <a href="http://stackoverflow.com/a/23009119/401544">stackoverflow</a> provided a workaround by calling collection view&#8217;s <code>startInteractiveTransitionToCollectionViewLayout:</code> method instead.</p>

<pre><code class="objc">[self.collectionView startInteractiveTransitionToCollectionViewLayout:self.finalLayout completion:nil];
[self.collectionView finishInteractiveTransition];
</code></pre>

<p>The problem is we cannot control the speed of the animation. What I wanted is to &#8220;animate&#8221; the <code>UICollectionViewTransitionLayout</code>&#8217;s <code>transitionProgress</code> property.</p>

<pre><code class="objc">[UIView animateWithDuration:0.3 delay:0 usingSpringWithDamping:1 initialSpringVelocity:1 options:UIViewAnimationOptionCurveEaseInOut animations:^{
    transition.transitionProgress = 1;
} completion:^(BOOL finished) {}];    
</code></pre>

<p>But since transitionProgress is not animatable, this doesn&#8217;t work. This is where <a href="https://github.com/facebook/pop">Facebook&#8217;s Pop</a> comes to rescue. Using Pop, we can animate custom properties.</p>

<pre><code class="objc">// CustomTransitionLayout is subclass of UICollectionViewTransitionLayout
CustomTransitionLayout *transition = (CustomTransitionLayout *)[self.collectionView startInteractiveTransitionToCollectionViewLayout:self.finalLayout completion:nil];

POPSpringAnimation *springAnimation = [POPSpringAnimation animation];
POPAnimatableProperty *property = [POPAnimatableProperty propertyWithName:@"com.photos.transition" initializer:^(POPMutableAnimatableProperty *prop) {
   prop.readBlock = ^(id obj, CGFloat values[]) {
       values[0] = [obj transitionProgress];
   };
   prop.writeBlock = ^(id obj, const CGFloat values[]) {
       [obj setTransitionProgress:values[0]];
   };
   prop.threshold = 0.01;
}];
springAnimation.springBounciness = 8;
springAnimation.property = property;
springAnimation.fromValue = @(progress);
springAnimation.toValue = @(1.0);
springAnimation.completionBlock = ^(POPAnimation *anim, BOOL finished){
   if (finished) {
       [transition setTransitionProgress:1];
       [self.collectionView finishInteractiveTransition];
   }
};
[transition pop_addAnimation:springAnimation forKey:NSStringFromSelector(@selector(transitionProgress))];
</code></pre>

<p>This way, the value of <code>transitionProgress</code> will gradually change from 0 to 1. If you implement UICollectionViewTransitionLayout&#8217;s <code>layoutAttributesForElementsInRect:</code> method and set the attributes of each cell based on the value of <code>transitionProgress</code>, you can create a custom layout animation transition.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[City Names to Timezones Plist]]></title>
    <link href="http://www.nicnocquee.com/blog/2014/12/10/city-names-to-timezones-plist/"/>
    <updated>2014-12-10T20:42:06+09:00</updated>
    <id>http://www.nicnocquee.com/blog/2014/12/10/city-names-to-timezones-plist</id>
    <content type="html"><![CDATA[<p>For a recent project I need a list that maps city names to timezones. You can easily get a list of timezones in iOS or Mac using <code>[NSTimeZone knownTimeZoneNames]</code> but it doesn&#8217;t map from city names.</p>

<!--more-->


<p>So with a bit of regex dance, I managed to parse timezones data and create a property list file containing 626 city names and their corresponding timezones. You can check it out <a href="https://github.com/nicnocquee/Timezones-Property-List">here</a>.</p>

<p>There are two files you can use. The minimal version and the normal version. The normal version maps city names to timezones dictionary which contains timezones name, timezone abbreviation, and timezone offset from GMT in seconds. The minimal version only maps city names to their timezone names.</p>

<p>Let me know if you use it and find it useful :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QuartzCode: PaintCode for Animation]]></title>
    <link href="http://www.nicnocquee.com/blog/2014/10/17/quartzcode/"/>
    <updated>2014-10-17T23:49:43+09:00</updated>
    <id>http://www.nicnocquee.com/blog/2014/10/17/quartzcode</id>
    <content type="html"><![CDATA[<p>There are many <a href="blog/2014/09/28/25-must-have-apps-for-your-mac/">amazing tools to help iOS development</a> easier. One of them is <a href="https://itunes.apple.com/jp/app/paintcode-2/id808809998?l=en&amp;mt=12&amp;at=11lMiE">PaintCode</a>. A splendid tool to turn drawings into code. But what about animation? It would be very helpful if there is a tool to create animations visually and turn them into code. <a href="https://itunes.apple.com/us/app/quartzcode-vector-animation/id913523893?ls=1&amp;mt=12&amp;at=11lMiE">QuartzCode</a> is the answer.</p>

<!--more-->


<p>I gave it a try by trying to replicate the cute uploading animation I found in <a href="https://dribbble.com/shots/1429143-Upload?list=buckets&amp;offset=14">Dribbble</a>.</p>

<p><img src="https://d13yacurqjgara.cloudfront.net/users/50261/screenshots/1429143/upload.gif" alt="cute uploading animation" /></p>

<p>While it&#8217;s not completely the same, I managed to come up with something close enough after playing with QuartzCode for few hours.</p>

<p><img src="https://raw.githubusercontent.com/nicnocquee/FluidProgressIndicator/master/NPRUploadAnimation/files/demo-0.gif" alt="" /></p>

<p>QuartzCode surely improves development speed once you get used to it. However it&#8217;s not quite perfect right now since there are some frustrating bugs which I hope will be fixed in the future:</p>

<ol>
<li>The undo function doesn&#8217;t work properly sometimes. Especially for paths.</li>
<li>Inspector panel and Keyframe inspector panel are unscrollable which probably is caused by Yosemite.</li>
<li>The generated code is buggy. Xcode warns a retail cycle, variable redefinition, etc.</li>
</ol>


<p>Regardless, by tweaking the generated code and by learning that we can <a href="http://ronnqvi.st/controlling-animation-timing/">control the animation timing</a>, I could create a lovely upload progress control.</p>

<p><img src="https://raw.githubusercontent.com/nicnocquee/FluidProgressIndicator/master/NPRUploadAnimation/files/demo-1.gif" alt="" /></p>

<p>You can check out the project in <a href="https://github.com/nicnocquee/FluidProgressIndicator">Github</a> along with the <a href="https://github.com/nicnocquee/FluidProgressIndicator/tree/master/NPRUploadAnimation/files">QuartzCode project</a>.</p>

<p>QuartzCode is <a href="https://itunes.apple.com/us/app/quartzcode-vector-animation/id913523893?ls=1&amp;mt=12&amp;at=11lMiE">$79.99 on the Mac App Store</a> or you can try it first for free by downloading it from the <a href="http://www.quartzcodeapp.com">website</a>. Don&#8217;t forget to take a look at pretty cool examples on the website to find out what you can make with QuartzCode.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSAttributedString With NSStrikethroughStyleAttributeName Bug in iOS 8]]></title>
    <link href="http://www.nicnocquee.com/blog/2014/09/22/nsattributedstring-with-nsstrikethroughstyleattributename-bug-in-ios-8/"/>
    <updated>2014-09-22T20:09:42+09:00</updated>
    <id>http://www.nicnocquee.com/blog/2014/09/22/nsattributedstring-with-nsstrikethroughstyleattributename-bug-in-ios-8</id>
    <content type="html"><![CDATA[<p>In iOS 7, it&#8217;s easy to create UILabel with strikethrough text. You can just simply assign <code>NSAttributedString</code> to the text label.</p>

<!--more-->


<pre><code class="objc">    NSString *price = @"7,500";
    NSString *retailPrice = @"10,000円";
    NSString *text = [NSString stringWithFormat:@"%@ %@", price, retailPrice];
    NSMutableAttributedString *string = [[NSMutableAttributedString alloc] initWithString:text];
    [string addAttributes:@{NSStrikethroughStyleAttributeName:@(NSUnderlineStyleSingle)} range:[text rangeOfString:retailPrice]];
    [self.label setAttributedText:string];
</code></pre>

<p><img src="http://f.cl.ly/items/1s1g3A3Z070n0u1k2t2W/iOS%20Simulator%20Screen%20Shot%20Sep%2022,%202014,%2020.11.27.png" alt="nsattributedstring-ios-8-bug" /></p>

<p>But in iOS 8, that code didn&#8217;t work anymore. The strikethrough line didn&#8217;t appear. Funny thing was, if range&#8217;s location is set to 0, or strikethrough from the beginning, the line appeared. To fix this you just have to assign the strikethrough attribute, <code>NSUnderlineStyleNone</code> to the whole string on initialization.</p>

<pre><code class="objc">    NSMutableAttributedString *string = [[NSMutableAttributedString alloc] initWithString:text attributes:@{NSStrikethroughStyleAttributeName: @(NSUnderlineStyleNone)}];
    [string addAttributes:@{NSStrikethroughStyleAttributeName:@(NSUnderlineStyleSingle)} range:[text rangeOfString:retailPrice]];
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift: There's a Shorter Way for That]]></title>
    <link href="http://www.nicnocquee.com/blog/2014/09/22/swift-theres-a-shorter-way-for-that/"/>
    <updated>2014-09-22T09:40:52+09:00</updated>
    <id>http://www.nicnocquee.com/blog/2014/09/22/swift-theres-a-shorter-way-for-that</id>
    <content type="html"><![CDATA[<p>Backward sorting array of string using Swift:</p>

<!--more-->


<pre><code class="objc">    let names = ["Chris", "Alex", "Ewa", "Barry", "Daniella"]
    func backwards(s1: String, s2: String) -&gt; Bool {
        return s1 &gt; s2
    }
    var reversed = sorted(names, backwards)
</code></pre>

<p>Too long.</p>

<pre><code class="objc">    reversed = sorted(names, { (s1: String, s2: String) -&gt; Bool in
            return s1 &gt; s2
    })
</code></pre>

<p>Let&#8217;s make it one line.</p>

<pre><code class="objc">    reversed = sorted(names, { (s1: String, s2: String) -&gt; Bool in return s1 &gt; s2 } )
</code></pre>

<p>Don&#8217;t be satisfied yet.</p>

<pre><code class="objc">    reversed = sorted(names, { s1, s2 in return s1 &gt; s2 } )
</code></pre>

<p>You didn&#8217;t think that&#8217;s the best we can do, right?</p>

<pre><code class="objc">    reversed = sorted(names, { s1, s2 in s1 &gt; s2 } )
</code></pre>

<p>Shorter!</p>

<pre><code class="objc">    reversed = sorted(names, { $0 &gt; $1 } )  
</code></pre>

<p>You can do it!</p>

<pre><code class="objc">    reversed = sorted(names, &gt;)
</code></pre>

<p>Use the force!</p>

<pre><code class="objc">    😄=sorted(🐷,&gt;)
</code></pre>

<p>There! We have the winner! Oh, if you see two rectangles on the code above, use Safari or  Firefox, please :)</p>
]]></content>
  </entry>
  
</feed>
